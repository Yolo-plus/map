let fs = require("fs")

var dataCitys = {
  "0": ["北京市", "天津市", "上海市", "重庆市", "河北省", "山西省", "内蒙古", "辽宁省", "吉林省", "黑龙江省", "江苏省", "浙江省", "安徽省", "福建省", "江西省", "山东省", "河南省", "湖北省", "湖南省", "广东省", "广西省", "海南省", "四川省", "贵州省", "云南省", "西藏", "陕西省", "甘肃省", "青海省", "宁夏省", "新疆", "香港", "澳门", "台湾", "其它国家及地区"],
  "0_0": ["北京市"],
  "0_1": ["天津市"],
  "0_2": ["上海市"],
  "0_3": ["重庆市"],
  "0_4": ["石家庄市", "张家口市", "承德市", "秦皇岛市", "唐山市", "廊坊市", "保定市", "衡水市", "沧州市", "邢台市", "邯郸市","雄安新区"],
  "0_5": ["太原市", "朔州市", "大同市", "阳泉市", "长治市", "晋城市", "忻州市", "晋中市", "临汾市", "吕梁市", "运城市"],
  "0_6": ["呼和浩特市", "包头市", "乌海市", "赤峰市", "通辽市", "呼伦贝尔市", "鄂尔多斯市", "乌兰察布市", "巴彦淖尔市", "兴安盟", "锡林郭勒盟", "阿拉善盟"],
  "0_7": ["沈阳市", "朝阳市", "阜新市", "铁岭市", "抚顺市", "本溪市", "辽阳市", "鞍山市", "丹东市", "大连市", "营口市", "盘锦市", "锦州市", "葫芦岛市"],
  "0_8": ["长春市", "白城市", "松原市", "吉林市", "四平市", "辽源市", "通化市", "白山市", "延边州"],
  "0_9": ["哈尔滨市", "齐齐哈尔市", "七台河市", "黑河市", "大庆市", "鹤岗市", "伊春市", "佳木斯市", "双鸭山市", "鸡西市", "牡丹江市", "绥化市", "大兴安岭地区"],
  "0_10": ["南京市", "徐州市", "连云港市", "宿迁市", "淮安市", "盐城市", "扬州市", "泰州市", "南通市", "镇江市", "常州市", "无锡市", "苏州市"],
  "0_11": ["杭州市", "湖州市", "嘉兴市", "舟山市", "宁波市", "绍兴市", "衢州市", "金华市", "台州市", "温州市", "丽水市"],
  "0_12": ["合肥市", "宿州市", "淮北市", "亳州市", "阜阳市", "蚌埠市", "淮南市", "滁州市", "马鞍山市", "芜湖市", "铜陵市", "安庆市", "黄山市", "六安市", "巢湖市", "池州市", "宣城市"],
  "0_13": ["福州市", "南平市", "莆田市", "三明市", "泉州市", "厦门市", "漳州市", "龙岩市", "宁德市"],
  "0_14": ["南昌市", "九江市", "景德镇市", "鹰潭市", "新余市", "萍乡市", "赣州市", "上饶市", "抚州市", "宜春市", "吉安市"],
  "0_15": ["济南市", "青岛市", "聊城市", "德州市", "东营市", "淄博市", "潍坊市", "烟台市", "威海市", "日照市", "临沂市", "枣庄市", "济宁市", "泰安市", "莱芜市", "滨州市", "菏泽市"],
  "0_16": ["郑州市", "开封市", "三门峡市", "洛阳市", "焦作市", "新乡市", "鹤壁市", "安阳市", "濮阳市", "商丘市", "许昌市", "漯河市", "平顶山市", "南阳市", "信阳市", "周口市", "驻马店市", "济源市"],
  "0_17": ["武汉市", "十堰市", "襄阳市", "荆门市", "孝感市", "黄冈市", "鄂州市", "黄石市", "咸宁市", "荆州市", "宜昌市", "随州市", "恩施州"],
  "0_18": ["长沙市", "张家界市", "常德市", "益阳市", "岳阳市", "株洲市", "湘潭市", "衡阳市", "郴州市", "永州市", "邵阳市", "怀化市", "娄底市", "湘西州"],
  "0_19": ["广州市", "深圳市", "清远市", "韶关市", "河源市", "梅州市", "潮州市", "汕头市", "揭阳市", "汕尾市", "惠州市", "东莞市", "珠海市", "中山市", "江门市", "佛山市", "肇庆市", "云浮市", "阳江市", "茂名市", "湛江市"],
  "0_20": ["南宁市", "桂林市", "柳州市", "梧州市", "贵港市", "玉林市", "钦州市", "北海市", "防城港市", "崇左市", "百色市", "河池市", "来宾市", "贺州市"],
  "0_21": ["海口市", "三亚市", "东方市", "临高县", "澄迈县", "儋州市", "昌江县", "白沙县", "琼中县", "定安县", "屯昌县", "琼海市", "文昌市", "保亭县", "万宁市", "陵水县", "乐东县", "五指山市", "三沙市"],
  "0_22": ["成都市", "广元市", "绵阳市", "德阳市", "南充市", "广安市", "遂宁市", "内江市", "乐山市", "自贡市", "泸州市", "宜宾市", "攀枝花市", "巴中市", "达州市", "资阳市", "眉山市", "雅安市", "阿坝州", "甘孜州", "凉山州"],
  "0_23": ["贵阳市", "六盘水市", "遵义市", "安顺市", "毕节地区", "铜仁地区", "黔东南州", "黔南州", "黔西南州"],
  "0_24": ["昆明市", "曲靖市", "玉溪市", "保山市", "昭通市", "丽江市", "普洱市", "临沧市", "德宏州", "怒江州", "迪庆州", "大理州", "楚雄州", "红河州", "文山州", "西双版纳州"],
  "0_25": ["拉萨市", "那曲地区", "昌都地区", "林芝地区", "山南地区", "日喀则地区", "阿里地区"],
  "0_26": ["西安市", "延安市", "铜川市", "渭南市", "咸阳市", "宝鸡市", "汉中市", "榆林市", "安康市", "商洛市"],
  "0_27": ["兰州市", "嘉峪关市", "白银市", "天水市", "武威市", "酒泉市", "张掖市", "庆阳市", "平凉市", "定西市", "陇南市", "临夏州", "甘南州"],
  "0_28": ["西宁市", "海东地区", "海北州", "海南州", "黄南州", "果洛州", "玉树州", "海西州"],
  "0_29": ["银川市", "石嘴山市", "吴忠市", "固原市", "中卫市"],
  "0_30": ["乌鲁木齐市", "克拉玛依市", "喀什地区", "阿克苏", "和田地区", "吐鲁番市", "哈密地区", "克孜勒州", "博尔塔拉州", "昌吉州", "巴音郭楞州", "伊犁州", "塔城", "阿勒泰地区", "石河子市", "阿拉尔市", "图木舒克市", "五家渠市", "铁门关市", "昆玉市", "北屯市", "双河市", "可克达拉市", "胡杨河市"],
  "0_31": ["香港特别行政区"],
  "0_32": ["澳门特别行政区"],
  "0_33": ["台北市", "高雄市", "台中市", "花莲市", "嘉义市", "苗栗市", "南投市", "屏东市", "台东市", "台南市", "桃园市", "新竹市", "宜兰市", "云林市", "彰化市"],
  "0_34": ["其它国家及地区"]
}

// 获得无序的城市数组
function getDisorderCitys() {
  let tempCitys = Object.values(dataCitys)
  let citysArr = []

  tempCitys.forEach((item, index) => {
    if (index) {
      citysArr = citysArr.concat(item)  // 返回一个新数组
    }
  })

  return citysArr
}

// 城市按字母排序，empty：是否显示空行
function citysSort(arr, empty) {
  if (!String.prototype.localeCompare) return null

  let letters = '*abcdefghjklmnopqrstwxyz'.split('')
  let zh = '阿八嚓哒妸发旮哈讥咔垃痳拏噢妑七呥扨它穵夕丫帀'.split('')  // 边界

  let segs = []
  let cur

  // 遍历字母
  letters.forEach((item1, index1) => {
    cur = {letters: item1, data: []}

    // 遍历城市，当前字分别与之前字母和之后字母比较，之前为负数，之后为正数
    arr.forEach(item2 => {
      if ((!zh[index1 - 1] || zh[index1 - 1].localeCompare(item2[0], 'zh') <= 0) && item2[0].localeCompare(zh[index1], 'zh') == -1) {
        cur.data.push(item2)
      }
    })

    if (empty || cur.data.length) {
      segs.push(cur)

      // 对归在每一个字母的城市排序
      cur.data.sort((a, b) => a.localeCompare(b, 'zh'))
    }
  })

  return segs
}

let disorderCitys = getDisorderCitys()  // 无序城市数组
let sortCitys = citysSort(disorderCitys, true)  // 排序后的城市数组

fs.writeFile('./sort-citys.js', JSON.stringify(sortCitys), function (err) {
  if (err) {
    console.log(err)
    return;
  }

  console.log('文件写入成功。')
})

